{"version":3,"sources":["components/CarouselItem/CarouselItem.js","components/Carousel/Carousel.js","components/Settings/Settings.js","App.js","index.js"],"names":["CarouselItem","props","url","alt","width","className","style","src","prototype","PropTypes","string","isRequired","Carousel","state","margin","infinite","itemWidth","counterShowedSlides","frameSize","transition","animationDuration","noInfiniteNext","images","step","length","newPosition","Math","max","setState","prevState","noInfinitePrev","InfiniteNext","InfinitePrev","handlerTransitionEnd","handleNext","handlePrev","prevProps","snapshot","this","onTransitionEnd","transform","map","img","idx","key","random","toString","onClick","type","PureComponent","Settings","settingsObj","forbiddenSettings","handlerCheckbox","e","isChecked","target","checked","prev","handlerChange","name","value","handlerSubmit","preventDefault","submitFunc","action","onSubmit","htmlFor","min","id","onChange","React","Component","setClones","slice","App","imageList","isSettingsOpen","setSettings","obj","handleSettingsOpen","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ce07440.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CarouselItem = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const { url, alt, width } = props;\n\n  return (\n    <li\n      className=\"Carousel__item\"\n      style={{\n        width: `${width}px`,\n      }}\n    >\n      <img className=\"Carousel__img\" src={url} alt={alt} />\n    </li>\n  );\n};\n\nCarouselItem.prototype = {\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { CarouselItem } from '../CarouselItem/CarouselItem';\nimport './Carousel.css';\n\nexport class Carousel extends PureComponent {\n  state = {\n    margin: this.props.infinite\n      ? -this.props.itemWidth\n      : 0,\n    counterShowedSlides: this.props.infinite\n      ? 2\n      : this.props.frameSize,\n    transition:\n        `transform ${this.props.animationDuration}\n        ms cubic-bezier(0.5, 0, 0.96, 1)`,\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.step === this.props.step\n        || prevProps.frameSize === this.props.frameSize\n        || prevProps.itemWidth === this.props.itemWidth\n    ) {\n      return;\n    }\n\n    // eslint-disable-next-line react/no-did-update-set-state\n    this.setState({\n      transition:\n          `transform ${this.props.animationDuration}\n        ms cubic-bezier(0.5, 0, 0.96, 1)`,\n      counterShowedSlides: this.props.infinite\n        ? 2\n        : this.props.frameSize,\n      margin: this.props.infinite\n        ? -this.props.itemWidth * this.props.frameSize\n        : 0,\n    });\n  }\n\n  noInfiniteNext = () => {\n    const { images, step, itemWidth, animationDuration } = this.props;\n    const { counterShowedSlides, margin } = this.state;\n    const { length } = images;\n    const newPosition = Math.max(\n      margin - itemWidth * step,\n      -itemWidth * (length - step),\n    );\n\n    if (counterShowedSlides === length) {\n      return;\n    }\n\n    if (length - counterShowedSlides < step) {\n      this.setState(prevState => ({\n        transition:\n            `transform ${animationDuration}ms cubic-bezier(0.5, 0, 0.96, 1)`,\n        counterShowedSlides: length,\n        margin:\n            prevState.margin\n            - itemWidth * (length - counterShowedSlides),\n      }));\n    } else {\n      this.setState(prevState => ({\n        transition:\n            `transform ${animationDuration}ms cubic-bezier(0.5, 0, 0.96, 1)`,\n        counterShowedSlides: prevState.counterShowedSlides + step,\n        margin: newPosition,\n      }));\n    }\n  };\n\n  noInfinitePrev = () => {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n    const { counterShowedSlides } = this.state;\n    // eslint-disable-next-line no-unused-vars\n    const { length } = images;\n\n    if (counterShowedSlides === frameSize\n    || counterShowedSlides < frameSize) {\n      return;\n    }\n\n    if (counterShowedSlides - step < frameSize\n        || counterShowedSlides - frameSize < frameSize\n    ) {\n      this.setState({\n        transition:\n            `transform ${animationDuration}ms cubic-bezier(0.5, 0, 0.96, 1)`,\n        counterShowedSlides: frameSize,\n        margin: 0,\n      });\n    } else {\n      this.setState(prevState => ({\n        transition:\n            `transform ${animationDuration}ms cubic-bezier(0.5, 0, 0.96, 1)`,\n        counterShowedSlides: prevState.counterShowedSlides - step,\n        margin: prevState.margin + itemWidth * step,\n      }));\n    }\n  };\n\n  InfiniteNext = () => {\n    const { itemWidth,\n      animationDuration } = this.props;\n\n    this.setState(prevState => ({\n      transition:\n            `transform ${animationDuration}ms cubic-bezier(0.5, 0, 0.96, 1)`,\n      counterShowedSlides: prevState.counterShowedSlides + 1,\n      margin: prevState.margin - itemWidth,\n    }));\n  }\n\n  InfinitePrev = () => {\n    const { itemWidth, animationDuration } = this.props;\n\n    this.setState(prevState => ({\n      transition:\n          `transform ${animationDuration}ms cubic-bezier(0.5, 0, 0.96, 1)`,\n      counterShowedSlides: prevState.counterShowedSlides - 1,\n      margin: prevState.margin + itemWidth,\n    }));\n  }\n\n  handlerTransitionEnd = () => {\n    if (this.state.counterShowedSlides === this.props.images.length) {\n      this.setState({\n        transition: `none`,\n        counterShowedSlides: 2,\n        margin: -this.props.itemWidth,\n      });\n    }\n\n    if (this.state.counterShowedSlides === 1) {\n      this.setState({\n        transition: `none`,\n        counterShowedSlides: this.props.images.length - 1,\n        margin: this.props.itemWidth * (-this.props.images.length + 2),\n      });\n    }\n  }\n\n  handleNext = () => {\n    this.props.infinite\n      ? this.InfiniteNext()\n      : this.noInfiniteNext();\n  }\n\n  handlePrev = () => {\n    this.props.infinite\n      ? this.InfinitePrev()\n      : this.noInfinitePrev();\n  }\n\n  render() {\n    const {\n      images,\n      infinite,\n      itemWidth,\n      frameSize,\n    } = this.props;\n    const { margin, transition } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <div\n          className=\"Carousel__viewport\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          <ul\n            onTransitionEnd={infinite && this.handlerTransitionEnd}\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${margin}px)`,\n              width: `${images.length * (itemWidth)}px`,\n              transition: `${transition}`,\n            }}\n          >\n            { images.map((img, idx) => (\n              <CarouselItem\n                key={Math.random().toString()}\n                url={img}\n                width={itemWidth}\n                alt={`img${idx}`}\n              />\n            ))\n            }\n          </ul>\n        </div>\n        <button\n          className=\"btn btn-prev\"\n          onClick={this.handlePrev}\n          type=\"button\"\n        >\n          Prev\n        </button>\n        <button\n          className=\"btn btn-next\"\n          onClick={this.handleNext}\n          type=\"button\"\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      length: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  infinite: PropTypes.bool.isRequired,\n  step: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired.isRequired,\n  animationDuration: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './Settings.css';\nimport PropTypes from 'prop-types';\n\nexport class Settings extends React.Component {\n  state = {\n    settingsObj: {\n      step: 1,\n      frameSize: 1,\n      itemWidth: 130,\n      animationDuration: 600,\n      infinite: true,\n    },\n    forbiddenSettings: true,\n  };\n\n  handlerCheckbox = (e) => {\n    const isChecked = e.target.checked;\n\n    this.setState(prev => ({\n      settingsObj: {\n        ...prev.settingsObj,\n        step: isChecked ? 1 : prev.settingsObj.step,\n        frameSize: isChecked ? 1 : prev.settingsObj.frameSize,\n        infinite: isChecked,\n      },\n      forbiddenSettings: isChecked,\n    }));\n  };\n\n  handlerChange = (e) => {\n    const { name } = e.target;\n    const { value } = e.target;\n\n    this.setState(prev => ({\n      settingsObj: {\n        ...prev.settingsObj,\n        [name]: +value,\n      },\n    }));\n  };\n\n  handlerSubmit = (e) => {\n    e.preventDefault();\n    this.props.submitFunc(this.state.settingsObj);\n  };\n\n  render() {\n    const { className } = this.props;\n    const { settingsObj, forbiddenSettings } = this.state;\n\n    return (\n      <div className={className}>\n        <h4 className=\"Settings__title\">Input your settings</h4>\n        <form\n          action=\"#\"\n          onSubmit={this.handlerSubmit}\n\n        >\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"customRange1\">Step</label>\n            <span className=\"Settings__value\">\n              Value:\n              {settingsObj.step}\n            </span>\n            <input\n              min=\"1\"\n              max=\"5\"\n              id=\"customRange1\"\n              onChange={this.handlerChange}\n              value={settingsObj.step}\n              className=\"Settings__input custom-range\"\n              name=\"step\"\n              type=\"range\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"customRange2\">Frame Size</label>\n            <span className=\"Settings__value\">\n              Value:\n              {settingsObj.frameSize}\n            </span>\n            <input\n              min=\"1\"\n              max=\"5\"\n              value={settingsObj.frameSize}\n              id=\"customRange2\"\n              onChange={this.handlerChange}\n              className=\"Settings__input custom-range\"\n              name=\"frameSize\"\n              type=\"range\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"customRange3\">Item Width</label>\n            <span className=\"Settings__value\">\n              Value:\n              {settingsObj.itemWidth}\n            </span>\n            <input\n              min=\"100\"\n              max=\"150\"\n              step=\"10\"\n              id=\"customRange3\"\n              value={settingsObj.itemWidth}\n              onChange={this.handlerChange}\n              className=\"Settings__input custom-range\"\n              name=\"itemWidth\"\n              type=\"range\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"customRange4\">Animation Duration</label>\n            <span className=\"Settings__value\">\n              Value:\n              {settingsObj.animationDuration}\n            </span>\n            <input\n              min=\"100\"\n              max=\"2000\"\n              step=\"200\"\n              id=\"customRange4\"\n              value={settingsObj.animationDuration}\n              onChange={this.handlerChange}\n              className=\"Settings__input custom-range\"\n              name=\"animationDuration\"\n              type=\"range\"\n            />\n          </fieldset>\n          <div className=\"custom-control custom-switch\">\n            <input\n              onChange={this.handlerCheckbox}\n              type=\"checkbox\"\n              className=\"custom-control-input\"\n              name=\"infinite\"\n              id=\"customSwitch1\"\n              checked={settingsObj.infinite}\n            />\n            <label\n              className=\"custom-control-label\"\n              htmlFor=\"customSwitch1\"\n            >\n              Infinite\n            </label>\n          </div>\n          <button\n            className=\"Settings__btn\"\n            type=\"submit\"\n          >\n            Change Settings\n          </button>\n        </form>\n\n        {forbiddenSettings\n        && (\n          <p className=\"Settings__forbidden\">\n          These settings are only available outside of infinity mode\n          </p>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  submitFunc: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport './App.css';\nimport './reset.css';\nimport { Carousel } from './components/Carousel/Carousel';\nimport { Settings } from './components/Settings/Settings';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\nconst setClones = () => {\n  const infiniteImages = [\n    ...images.slice(images.length - 1, images.length),\n    ...images,\n    ...images.slice(0, 1),\n  ];\n\n  return infiniteImages;\n};\n\nclass App extends React.Component {\n  state = {\n    imageList: setClones(),\n    step: 1,\n    frameSize: 1,\n    itemWidth: 130 + 30,\n    animationDuration: 600,\n    infinite: true,\n    isSettingsOpen: false,\n  };\n\n  setSettings = (obj) => {\n    this.setState({\n      step: obj.step,\n      frameSize: obj.frameSize,\n      itemWidth: obj.itemWidth + 30,\n      animationDuration: obj.animationDuration,\n      infinite: obj.infinite,\n    });\n\n    this.setState(prevState => ({\n      isSettingsOpen: !prevState.isSettingsOpen,\n      imageList: prevState.infinite\n        ? setClones()\n        : [\n          './img/1.png',\n          './img/2.png',\n          './img/3.png',\n          './img/4.png',\n          './img/5.png',\n          './img/6.png',\n          './img/7.png',\n          './img/8.png',\n          './img/9.png',\n          './img/10.png',\n        ],\n    }));\n  };\n\n  handleSettingsOpen = () => {\n    this.setState(prevState => ({\n      isSettingsOpen: !prevState.isSettingsOpen,\n    }));\n  }\n\n  render() {\n    const {\n      isSettingsOpen,\n      imageList,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n        Carousel with 10 images\n        </h1>\n        <button\n          className=\"Controller\"\n          type=\"button\"\n          onClick={this.handleSettingsOpen}\n        >\n          {isSettingsOpen ? 'Close Settings Bar' : 'Open Settings Bar'}\n        </button>\n        <Settings\n          className={isSettingsOpen ? 'Settings Settings--open' : 'Settings'}\n          submitFunc={obj => this.setSettings(obj)}\n        />\n        <Carousel\n          images={imageList}\n          frameSize={frameSize}\n          step={step}\n          infinite={infinite}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration.toString().trim()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}